package com.example.gfit.data.network.mapper

import com.example.gfit.data.model.workout.WorkoutExercise as UserWorkoutExercise
import android.util.Log
import com.google.gson.Gson
import com.google.gson.JsonSyntaxException

object WorkoutMapper {
    fun fromApiResponse(jsonContent: String): List<UserWorkoutExercise> {
        return try {
            Log.d("WorkoutMapper", "üîÑ D√©but du nettoyage et parsing JSON")

            // Nettoyer la r√©ponse
            val cleanJson = jsonContent
                .replace("```json", "") // Supprimer l'en-t√™te json
                .replace("```", "")     // Supprimer les backticks
                .trim()                 // Supprimer les espaces inutiles

            Log.d("WorkoutMapper", "üìù JSON nettoy√©: $cleanJson")

            // V√©rifier le format JSON
            if (!cleanJson.startsWith("[")) {
                Log.e("WorkoutMapper", "‚ùå Format JSON invalide apr√®s nettoyage")
                throw Exception("Le format de la r√©ponse n'est pas un tableau JSON valide")
            }

            val exercises = Gson().fromJson(cleanJson, Array<UserWorkoutExercise>::class.java).toList()
            Log.d("WorkoutMapper", "‚úÖ Parsing r√©ussi: ${exercises.size} exercices")
            exercises
        } catch (e: JsonSyntaxException) {
            Log.e("WorkoutMapper", "‚ùå Erreur de syntaxe JSON: ${e.message}")
            Log.e("WorkoutMapper", "Contenu probl√©matique: $jsonContent")
            throw Exception("Erreur de syntaxe JSON: ${e.message}")
        } catch (e: Exception) {
            Log.e("WorkoutMapper", "‚ùå Erreur de parsing: ${e.message}")
            Log.e("WorkoutMapper", "Contenu probl√©matique: $jsonContent")
            throw Exception("Erreur lors du parsing de la r√©ponse: ${e.message}")
        }
    }


}



